<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd">

    <context:property-placeholder location="classpath:serviceJdbc.properties"/>

    <bean id="propertyConfigurer" class="com.cmcc.omp.omee.acs.northaccess.util.Configuration">
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
                <value>classpath*:initParaConf.properties</value>
            </list>
        </property>
    </bean>


    <!--redis数据库管理-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!--<property name="maxActive" value="${redis.pool.maxActive}"/>-->
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="minIdle" value="${redis.pool.minIdle}"/>
        <!--<property name="maxWait" value="${redis.pool.maxWait}"/>-->
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
        <property name="testOnReturn" value="${redis.pool.testOnReturn}"/>
    </bean>

    <!-- redis的连接池pool，不是必选项：timeout/password  -->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${redis.host}" type="java.lang.String"/>
        <constructor-arg index="2" value="${redis.port}" type="int"/>
        <!--<constructor-arg index="3" value="${redis.timeout}" type="int"/>-->
        <!--<constructor-arg index="4" value="${redis.password}"/>-->
    </bean>


    <!-- 配置dbcp数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
    destroy-method="close">
    <property name="driverClassName" value="${jdbc.driverClassName}"/>
    <property name="url" value="${jdbc.url}"/>
    <property name="username" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>
    <!-- 队列中的最小等待数 -->
    <property name="minIdle" value="${jdbc.minIdle}"></property>
    <!-- 队列中的最大等待数 -->
    <property name="maxIdle" value="${jdbc.maxIdle}"></property>
    <!-- 最长等待时间，单位毫秒 -->
    <property name="maxWait" value="${jdbc.maxWait}"></property>
    <!-- 最大活跃数 -->
    <property name="maxActive" value="${jdbc.maxActive}"></property>
    <property name="initialSize" value="${jdbc.initialSize}"></property>
    <property name="testWhileIdle" value="${jdbc.testWhileIdle}"/>
    <property name="validationQuery" value="${jdbc.validationQuery}"/>
    <property name="timeBetweenEvictionRunsMillis"
    value="${jdbc.timeBetweenEvictionRunsMillis}"/>
    <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>
    </bean>

    <!-- 配置mybitasSqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <property name="configLocation" value="classpath:OfflineConfiguration_oracle.xml"></property>
    </bean>

    <!--<context:annotation-config/>-->
    <!--扫描mappers，并启用autowire-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.cmcc.omp.omee.acs.northaccess.dao"/>
    </bean>

    <!--rabbitMQ的相关配置-->
    <rabbit:connection-factory id="connectionFactory"
                               host="${rabbitMq.host}"
                               username="${rabbitMq.username}"
                               password="${rabbitMq.password}"
                               port="${rabbitMq.port}"
            />

    <rabbit:admin connection-factory="connectionFactory"/>

    <!--&lt;!&ndash; spring template声明&ndash;&gt;-->
    <rabbit:template exchange="msy-mq-exchange" id="amqpTemplate" connection-factory="connectionFactory"
                     message-converter="jsonMessageConverter"/>

    <rabbit:queue id="test_queue_key" name="test_queue_key" durable="true" auto-delete="false" exclusive="false"/>
    <rabbit:queue id="test_queue_key1" name="test_queue_key1" durable="true" auto-delete="false" exclusive="false"/>

    <!-- exchange queue binging key 绑定 -->
    <rabbit:direct-exchange name="msy-mq-exchange" durable="true" auto-delete="false" id="my-mq-exchange">
        <rabbit:bindings>
            <rabbit:binding queue="test_queue_key" key="test_queue_key"/>
            <rabbit:binding queue="test_queue_key1" key="test_queue_key1"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>
    <!-- 消息对象json转换类 -->
    <bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter"/>


</beans>